//
// Created by janos on 20.11.19.
//

#pragma once

#include <Corrade/Containers/StaticArray.h>
#include <Magnum/Math/RectangularMatrix.h>

//0.816847572980459  0.091576213509771
//0.091576213509771  0.816847572980459
//0.091576213509771  0.091576213509771
//0.108103018168070  0.445948490915965
//0.445948490915965  0.108103018168070
//0.445948490915965  0.445948490915965
//
//
//0.109951743655322
//0.109951743655322
//0.109951743655322
//0.223381589678011
//0.223381589678011
//0.223381589678011
//
//0.0  0.0
//1.0  0.0
//0.0  1.0

namespace Cr = Corrade;
namespace Mg = Magnum;

template<class T>
class QuadratureRefTriangle
{
private:

    const Mg::Math::RectangularMatrix<2, 6, T> interpolationPoints{
            Mg::Math::Vector<6, T>{T(0.816847572980459), T(0.091576213509771), T(0.091576213509771), T(0.108103018168070), T(0.445948490915965), T(0.445948490915965)},
            Mg::Math::Vector<6, T>{T(0.091576213509771), T(0.816847572980459), T(0.091576213509771), T(0.445948490915965), T(0.108103018168070), T(0.445948490915965)}};

           // {{T(0.816847572980459),  T(0.091576213509771)},
           //  {T(0.091576213509771),  T(0.816847572980459)},
           //  {T(0.091576213509771),  T(0.091576213509771)},
           //  {T(0.108103018168070),  T(0.445948490915965)},
           //  {T(0.445948490915965),  T(0.108103018168070)},
           //  {T(0.445948490915965),  T(0.445948490915965)}};

    const Cr::Containers::StaticArray<6, T> weights =
            {T(0.109951743655322),
             T(0.109951743655322),
             T(0.109951743655322),
             T(0.223381589678011),
             T(0.223381589678011),
             T(0.223381589678011)};

public:

    template<class F>
    T integrate(const F& f) const
    {
        T s{0};
        for (int i = 0; i < 6; ++i) {
            auto const& p = interpolationPoints[i];
            s += f(p[0], p[1]) * weights[i];
        }
        return T(0.5) * s;
    }
};